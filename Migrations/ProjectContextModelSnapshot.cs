// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int")
                        .HasColumnName("Cena");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int")
                        .HasColumnName("Kolicina");

                    b.Property<string>("Naziv")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Naziv");

                    b.Property<int?>("RedID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RedID");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Models.Red", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Broj")
                        .HasColumnType("int")
                        .HasColumnName("Broj");

                    b.Property<string>("Kategorija")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Kategorija");

                    b.Property<int?>("SupermarketID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SupermarketID");

                    b.ToTable("Red");
                });

            modelBuilder.Entity("Models.SProizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int")
                        .HasColumnName("Cena");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int")
                        .HasColumnName("Kolicina");

                    b.Property<string>("Naziv")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Naziv");

                    b.Property<int?>("SkladisteID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SkladisteID");

                    b.ToTable("SProizvod");
                });

            modelBuilder.Entity("Models.Skladiste", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Broj")
                        .HasColumnType("int")
                        .HasColumnName("Broj");

                    b.Property<int?>("SupermarketID")
                        .HasColumnType("int");

                    b.Property<int>("Velicina")
                        .HasColumnType("int")
                        .HasColumnName("Velicina");

                    b.HasKey("ID");

                    b.HasIndex("SupermarketID");

                    b.ToTable("Skladiste");
                });

            modelBuilder.Entity("Models.Supermarket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Grad");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Ime");

                    b.HasKey("ID");

                    b.ToTable("Supermarket");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.HasOne("Models.Red", "Red")
                        .WithMany("Proizvodi")
                        .HasForeignKey("RedID");

                    b.Navigation("Red");
                });

            modelBuilder.Entity("Models.Red", b =>
                {
                    b.HasOne("Models.Supermarket", "Supermarket")
                        .WithMany("Redovi")
                        .HasForeignKey("SupermarketID");

                    b.Navigation("Supermarket");
                });

            modelBuilder.Entity("Models.SProizvod", b =>
                {
                    b.HasOne("Models.Skladiste", "Skladiste")
                        .WithMany("SProizvod")
                        .HasForeignKey("SkladisteID");

                    b.Navigation("Skladiste");
                });

            modelBuilder.Entity("Models.Skladiste", b =>
                {
                    b.HasOne("Models.Supermarket", "Supermarket")
                        .WithMany("Skladista")
                        .HasForeignKey("SupermarketID");

                    b.Navigation("Supermarket");
                });

            modelBuilder.Entity("Models.Red", b =>
                {
                    b.Navigation("Proizvodi");
                });

            modelBuilder.Entity("Models.Skladiste", b =>
                {
                    b.Navigation("SProizvod");
                });

            modelBuilder.Entity("Models.Supermarket", b =>
                {
                    b.Navigation("Redovi");

                    b.Navigation("Skladista");
                });
#pragma warning restore 612, 618
        }
    }
}
